{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vedant\\\\Perplexity_assign_1\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const savedToken = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (savedToken && savedUser) {\n        try {\n          setToken(savedToken);\n          setUser(JSON.parse(savedUser));\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      setToken(newToken);\n      setUser(userData);\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response.data;\n      setToken(newToken);\n      setUser(newUser);\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed',\n        errors: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.errors) || []\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const updatePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put(`${API_BASE_URL}/auth/update-password`, {\n        currentPassword,\n        newPassword\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Password update failed'\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updatePassword,\n    isAuthenticated: !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","API_BASE_URL","process","env","REACT_APP_API_URL","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","initializeAuth","savedToken","savedUser","JSON","parse","error","console","logout","login","email","password","response","post","newToken","userData","data","setItem","stringify","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","_error$response3","_error$response3$data","errors","removeItem","updatePassword","currentPassword","newPassword","put","_error$response4","_error$response4$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Vedant/Perplexity_assign_1/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Configure axios defaults\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const savedToken = localStorage.getItem('token');\r\n      const savedUser = localStorage.getItem('user');\r\n\r\n      if (savedToken && savedUser) {\r\n        try {\r\n          setToken(savedToken);\r\n          setUser(JSON.parse(savedUser));\r\n        } catch (error) {\r\n          console.error('Error parsing saved user data:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const { token: newToken, user: userData } = response.data;\r\n      \r\n      setToken(newToken);\r\n      setUser(userData);\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Login failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\r\n      \r\n      const { token: newToken, user: newUser } = response.data;\r\n      \r\n      setToken(newToken);\r\n      setUser(newUser);\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Registration failed',\r\n        errors: error.response?.data?.errors || [],\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const updatePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await axios.put(`${API_BASE_URL}/auth/update-password`, {\r\n        currentPassword,\r\n        newPassword,\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Password update failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updatePassword,\r\n    isAuthenticated: !!token,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
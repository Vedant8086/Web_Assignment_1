{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// User API\nexport const userAPI = {\n  getDashboardStats: () => api.get('/users/dashboard-stats'),\n  getAllUsers: (params = {}) => api.get('/users', {\n    params\n  }),\n  createUser: userData => api.post('/users', userData)\n};\n\n// Store API\nexport const storeAPI = {\n  getAllStores: (params = {}) => api.get('/stores', {\n    params\n  }),\n  createStore: storeData => api.post('/stores', storeData),\n  getMyStores: () => api.get('/stores/my-stores'),\n  getStoreRatings: storeId => api.get(`/stores/${storeId}/ratings`)\n};\n\n// Rating API\nexport const ratingAPI = {\n  submitRating: ratingData => api.post('/ratings', ratingData),\n  getMyRatings: () => api.get('/ratings/my-ratings')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","userAPI","getDashboardStats","get","getAllUsers","params","createUser","userData","post","storeAPI","getAllStores","createStore","storeData","getMyStores","getStoreRatings","storeId","ratingAPI","submitRating","ratingData","getMyRatings"],"sources":["D:/Vedant/Perplexity_assign_1/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// User API\r\nexport const userAPI = {\r\n  getDashboardStats: () => api.get('/users/dashboard-stats'),\r\n  getAllUsers: (params = {}) => api.get('/users', { params }),\r\n  createUser: (userData) => api.post('/users', userData),\r\n};\r\n\r\n// Store API\r\nexport const storeAPI = {\r\n  getAllStores: (params = {}) => api.get('/stores', { params }),\r\n  createStore: (storeData) => api.post('/stores', storeData),\r\n  getMyStores: () => api.get('/stores/my-stores'),\r\n  getStoreRatings: (storeId) => api.get(`/stores/${storeId}/ratings`),\r\n};\r\n\r\n// Rating API\r\nexport const ratingAPI = {\r\n  submitRating: (ratingData) => api.post('/ratings', ratingData),\r\n  getMyRatings: () => api.get('/ratings/my-ratings'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrBC,iBAAiB,EAAEA,CAAA,KAAMvB,GAAG,CAACwB,GAAG,CAAC,wBAAwB,CAAC;EAC1DC,WAAW,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK1B,GAAG,CAACwB,GAAG,CAAC,QAAQ,EAAE;IAAEE;EAAO,CAAC,CAAC;EAC3DC,UAAU,EAAGC,QAAQ,IAAK5B,GAAG,CAAC6B,IAAI,CAAC,QAAQ,EAAED,QAAQ;AACvD,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAG;EACtBC,YAAY,EAAEA,CAACL,MAAM,GAAG,CAAC,CAAC,KAAK1B,GAAG,CAACwB,GAAG,CAAC,SAAS,EAAE;IAAEE;EAAO,CAAC,CAAC;EAC7DM,WAAW,EAAGC,SAAS,IAAKjC,GAAG,CAAC6B,IAAI,CAAC,SAAS,EAAEI,SAAS,CAAC;EAC1DC,WAAW,EAAEA,CAAA,KAAMlC,GAAG,CAACwB,GAAG,CAAC,mBAAmB,CAAC;EAC/CW,eAAe,EAAGC,OAAO,IAAKpC,GAAG,CAACwB,GAAG,CAAC,WAAWY,OAAO,UAAU;AACpE,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,YAAY,EAAGC,UAAU,IAAKvC,GAAG,CAAC6B,IAAI,CAAC,UAAU,EAAEU,UAAU,CAAC;EAC9DC,YAAY,EAAEA,CAAA,KAAMxC,GAAG,CAACwB,GAAG,CAAC,qBAAqB;AACnD,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
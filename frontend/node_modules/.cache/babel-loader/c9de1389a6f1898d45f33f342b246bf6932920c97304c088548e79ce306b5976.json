{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  logout: () => api.post('/auth/logout'),\n  getMe: () => api.get('/auth/me')\n};\n\n// User API\nexport const userAPI = {\n  getAllUsers: params => api.get('/users', {\n    params\n  }),\n  createUser: userData => api.post('/users', userData),\n  updateProfile: userData => {\n    console.log('🔧 API: Updating profile', userData);\n    return api.patch('/users/profile', userData);\n  },\n  getDashboardStats: () => api.get('/users/dashboard-stats')\n};\n\n// Admin API\nexport const adminAPI = {\n  // User management\n  updateUser: (userId, userData) => {\n    console.log('🔧 API: Updating user', userId, userData);\n    return api.patch(`/admin/users/${userId}`, userData);\n  },\n  deleteUser: userId => {\n    console.log('🗑️  API: Deleting user', userId);\n    return api.delete(`/admin/users/${userId}`);\n  },\n  // Store management\n  updateStore: (storeId, storeData) => {\n    console.log('🔧 API: Updating store', storeId, storeData);\n    return api.patch(`/admin/stores/${storeId}`, storeData);\n  },\n  deleteStore: storeId => {\n    console.log('🗑️  API: Deleting store', storeId);\n    return api.delete(`/admin/stores/${storeId}`);\n  }\n};\n\n// Store API\nexport const storeAPI = {\n  getAllStores: params => api.get('/stores', {\n    params\n  }),\n  createStore: storeData => api.post('/stores', storeData),\n  createOwnStore: storeData => api.post('/stores/create-own', storeData),\n  getMyStores: () => api.get('/stores/my-stores'),\n  getStoreRatings: storeId => api.get(`/stores/${storeId}/ratings`),\n  updateStoreByOwner: (storeId, storeData) => api.patch(`/stores/${storeId}/update`, storeData)\n};\n\n// Rating API\nexport const ratingAPI = {\n  submitRating: ratingData => api.post('/ratings', ratingData),\n  getUserRatings: () => api.get('/ratings/my-ratings')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","logout","getMe","get","userAPI","getAllUsers","params","createUser","updateProfile","console","log","patch","getDashboardStats","adminAPI","updateUser","userId","deleteUser","delete","updateStore","storeId","storeData","deleteStore","storeAPI","getAllStores","createStore","createOwnStore","getMyStores","getStoreRatings","updateStoreByOwner","ratingAPI","submitRating","ratingData","getUserRatings"],"sources":["D:/Vedant/Perplexity_assign_1/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  logout: () => api.post('/auth/logout'),\r\n  getMe: () => api.get('/auth/me'),\r\n};\r\n\r\n// User API\r\nexport const userAPI = {\r\n  getAllUsers: (params) => api.get('/users', { params }),\r\n  createUser: (userData) => api.post('/users', userData),\r\n  updateProfile: (userData) => {\r\n    console.log('🔧 API: Updating profile', userData);\r\n    return api.patch('/users/profile', userData);\r\n  },\r\n  getDashboardStats: () => api.get('/users/dashboard-stats'),\r\n};\r\n\r\n// Admin API\r\nexport const adminAPI = {\r\n  // User management\r\n  updateUser: (userId, userData) => {\r\n    console.log('🔧 API: Updating user', userId, userData);\r\n    return api.patch(`/admin/users/${userId}`, userData);\r\n  },\r\n  deleteUser: (userId) => {\r\n    console.log('🗑️  API: Deleting user', userId);\r\n    return api.delete(`/admin/users/${userId}`);\r\n  },\r\n  \r\n  // Store management\r\n  updateStore: (storeId, storeData) => {\r\n    console.log('🔧 API: Updating store', storeId, storeData);\r\n    return api.patch(`/admin/stores/${storeId}`, storeData);\r\n  },\r\n  deleteStore: (storeId) => {\r\n    console.log('🗑️  API: Deleting store', storeId);\r\n    return api.delete(`/admin/stores/${storeId}`);\r\n  },\r\n};\r\n\r\n// Store API\r\nexport const storeAPI = {\r\n  getAllStores: (params) => api.get('/stores', { params }),\r\n  createStore: (storeData) => api.post('/stores', storeData),\r\n  createOwnStore: (storeData) => api.post('/stores/create-own', storeData),\r\n  getMyStores: () => api.get('/stores/my-stores'),\r\n  getStoreRatings: (storeId) => api.get(`/stores/${storeId}/ratings`),\r\n  updateStoreByOwner: (storeId, storeData) => api.patch(`/stores/${storeId}/update`, storeData),\r\n};\r\n\r\n// Rating API\r\nexport const ratingAPI = {\r\n  submitRating: (ratingData) => api.post('/ratings', ratingData),\r\n  getUserRatings: () => api.get('/ratings/my-ratings'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}